{"version":3,"sources":["ducks/lookups/actions.js","ducks/lookups/reducers/index.js","ducks/lookups/actionCreators.js","config.js","ducks/lookups/config.js","ducks/lookups/sagas.js","ducks/lookups/selectors.js","ducks/lookups/index.js","redux/reducers.js","sagas.js","components/blocks/FindJob/index.js","components/commons/buttons/HeadButton.js","utils/lists.js","utils/index.js","components/blocks/ExtendedFilters/index.js","components/blocks/JobPage/index.js","utils/validations.js","components/blocks/CreateVacation/fields.js","components/blocks/CreateVacation/index.js","components/blocks/MainFork.js","components/blocks/SelectCity.js","App.js","Root.js","redux/configureStore.js","index.js"],"names":["REQUEST_LOOKUPS_VKAPI","START_LOOKUPS_VKAPI","startState","requestLookupsVkApi","method","arguments","length","undefined","requestId","params","type","payload","token","concat","rootSaga","action","_action$payload","regenerator_default","a","wrap","_context","prev","next","put","connect","send","request_id","stop","_marked","_context2","all","takeEvery","_marked2","emptyState","isLoading","response","count","items","citiesListSelector","state","lookups","stateSelector","cities","citiesStateSelector","reducers","Object","objectSpread","defineProperty","result","combineReducers","lookupsReducers","_callee","lookupsSaga","sagas_marked","osname","platform","HeadButton","props","react_default","createElement","vkui","IOS","chevron_back_default","back_default","monthNamesShort","reduceStringLength","str","numberToReduce","substring","formatDate","date","Date","day","getDate","month","getMonth","hours","getHours","minutes","getMinutes","fakeList","i","push","name","id","salary","organization","city","createdAt","description","contacts","numbers","address","employmentType","requirments","activities","bonuses","wishes","expirience","FindJob","search","contextOpened","isRequestStarted","isLoaded","listArray","handleSearchChange","_this","setState","handleBackClick","_this$props","goBack","back","handleToggleContext","prevState","handleGoToExtendedFilters","goToPanel","handleListScroll","data","clientHeight","scrollHeight","scrollTop","toConsumableArray","setTimeout","renderHeadButton","buttons_HeadButton","onClick","data-to","renderCell","_ref","key","index","style","el","className","handleCellClick","_this2","this","left","aside","dropdown_default","opened","onClose","value","onChange","dist_es","_ref2","height","width","Fragment","rowCount","rowHeight","rowRenderer","onScroll","size","marginTop","PureComponent","ExtendedFilters","fields","category","top","options","placeholder","salaryFrom","salaryTo","experience","schedules","renderButton","handleChange","e","_e$currentTarget","currentTarget","field","handleFormSubmit","_this$state$fields","assign","map","cat","JobPage","entity","requirment","wish","activity","bonuse","contact","required","errorMsg","bottom","error","validate","lookupKey","isMulti","contact_name","contact_numbers","contact_email","emptyArr","CreateVacation","values","initialValues","multiValues","errors","handleCreateButtonClick","handleValuesUpdate","handleChangeField","event","_event$currentTarget","newState","Array","isArray","some","validateCallback","errorRes","handleAddButtonClick","target","reqId","wishId","activityId","contactId","disabled","keys","errorKey","defaultProps","MainFork","activePanel","history","selected","createJobValues","pop","vkuiConnect","goForward","goToCityView","goToView","goToFindJob","goToGiveJob","handleExtendedFiltersSubmit","console","log","handleCreateJobValuesChange","stretched","level","selectedCity","title","blocks_FindJob","blocks_ExtendedFilters","blocks_JobPage","blocks_CreateVacation","Component","SelectCity","searchValue","goToMain","trim","country_id","need_all","v","q","access_token","renderHeaderButton","handleCitySelected","done_default","App","activeView","fetchedUser","subscribe","detail","putLookupsVkApiToStore","components_blocks_MainFork","components_blocks_SelectCity","React","reduxConnect","store","sagaMiddleware","createSagaMiddleware","enhancer","applyMiddleware","logger","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","rootReducer","run","sagas","configureStore","Root","es","src_App","ReactDOM","render","src_Root","document","getElementById"],"mappings":"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","file":"static/js/main.4478d0b2.chunk.js","sourcesContent":["export const REQUEST_LOOKUPS_VKAPI = 'REQUEST_LOOKUPS_VKAPI';\nexport const START_LOOKUPS_VKAPI = 'START_LOOKUPS_VKAPI';\nexport const SUCCESS_LOOKUPS_VKAPI = 'SUCCESS_LOOKUPS_VKAPI';\nexport const ERROR_LOOKUPS_VKAPI = 'ERROR_LOOKUPS_VKAPI';\n","import { SUCCESS_LOOKUPS_VKAPI, START_LOOKUPS_VKAPI } from '../actions';\n\nconst startState = {};\n\nexport default (state = startState, action) => {\n    const { type, payload } = action;\n\n    switch(type) {\n        case START_LOOKUPS_VKAPI:\n            return {\n                ...state, \n                [payload.requestId]: {\n                    isLoading: true,\n                    response: {\n                        count: 0,\n                        items: []\n                    }\n                }\n            };\n        case SUCCESS_LOOKUPS_VKAPI:\n            return {\n                ...state,\n                [payload.requestId]: {\n                    isLoading: false,\n                    response: payload.result\n                }\n            }\n        default:\n            return state;\n    }\n}\n","import {\n    REQUEST_LOOKUPS_VKAPI,\n    SUCCESS_LOOKUPS_VKAPI\n} from './actions';\n\nexport const requestLookupsVkApi = (method = '', requestId = '', params = {}) => {\n    return {\n        type: REQUEST_LOOKUPS_VKAPI,\n        payload: {\n            method,\n            requestId,\n            params\n        }\n    }\n}\n\nexport const putLookupsVkApiToStore = (requestId, result) => {\n    return {\n        type: SUCCESS_LOOKUPS_VKAPI,\n        payload: { requestId, result }\n    }\n}\n","export const appName = 'pims';\n\nexport const token = 'd46e057dd46e057dd46e057d96d404ca0ddd46ed46e057d8883a36cec96a5375f80147f';\n","import { appName } from '../../config';\n\nexport const moduleName = 'lookups';\nexport const prefix = `${appName}/${moduleName}`;","import { put, call, all, takeEvery } from 'redux-saga/effects';\nimport connect from '@vkontakte/vkui-connect';\nimport {\n    REQUEST_LOOKUPS_VKAPI,\n    START_LOOKUPS_VKAPI,\n    SUCCESS_LOOKUPS_VKAPI\n} from './actions';\n\nfunction* requestLookupsVkApi (action) {\n    const { method, requestId, params } = action.payload;\n\n    yield put({type: START_LOOKUPS_VKAPI, payload: { requestId }});\n\n    connect.send(\n        'VKWebAppCallAPIMethod',\n        {\n            \"method\": method,\n            \"request_id\": requestId,\n            \"params\": params\n        }\n    );\n}\n\nexport function* rootSaga () {\n    yield all([\n        takeEvery(REQUEST_LOOKUPS_VKAPI, requestLookupsVkApi)\n    ]);\n}\n","import { createSelector } from 'reselect';\n\nconst emptyState = {\n    isLoading: false,\n    response: {\n        count: 0,\n        items: []\n    }\n}\n\nconst stateSelector = state => state.lookups;\n\nconst citiesStateSelector = (state) => {\n    const lookupsSel = stateSelector(state);\n    return lookupsSel.cities || emptyState;\n}\n\nexport const citiesListSelector = (state) => {\n    return citiesStateSelector(state).response.items;\n}\n","import reducers from './reducers';\n\nexport * from './actionCreators';\nexport * from './config';\nexport * from './sagas';\nexport * from './selectors';\n\nexport default reducers;","import { combineReducers } from 'redux';\n\nimport lookupsReducers, {moduleName as lookupsModule} from '../ducks/lookups';\n\nexport default combineReducers({\n    [lookupsModule]: lookupsReducers\n})\n","import {all} from 'redux-saga/effects';\n\nimport { rootSaga as lookupsSaga } from './ducks/lookups';\n\nexport default function* () {\n  yield all([\n    lookupsSaga()\n  ]);\n}","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { \n    Panel, \n    PanelHeader, \n    Search, \n    PanelHeaderContent, \n    HeaderContext,\n    Cell,\n    Spinner,\n    List as VkList\n} from '@vkontakte/vkui';\nimport HeadButton from '../../commons/buttons/HeadButton';\nimport Icon16Dropdown from '@vkontakte/icons/dist/16/dropdown';\n\nimport { reduceStringLength, formatDate } from '../../../utils';\nimport './FindJob.css';\nimport { List, AutoSizer } from 'react-virtualized';\n\n\nconst fakeList = [];\nfor(let i = 0; i < 20; i++) {\n    fakeList.push({\n        name: `Официант`,\n        id: `id: ${i}`,\n        salary: `${i + 1}0 000 rub.`,\n        organization: 'Ресторан: The doors bar',\n        city: 'Saint P.',\n        createdAt: new Date(),\n        description: 'Controls the alignment scrolled-to-rows. The default (\"auto\") scrolls the least amount possible to ensure that the specified row is fully visible. Use \"start\" to always align rows to the top of the list and \"end\" to align them bottom. Use \"center\" to align them in the middle of container.',\n        contacts: [\n            {\n                name: 'Alex',\n                numbers: '89992145123'\n            }, {\n                name: 'Elena',\n                numbers: '89525426672'\n            }\n        ],\n        address: 'address asd',\n        employmentType: 'full time',\n        requirments: [\n            'Также вы можете использовать предопределенные константы, определяющие платформу:', \n            'Как вариант, на корневой элемент можно навесить модификаторы.'\n        ],\n        activities: [\n            'Также вы можете использовать предопределенные константы, определяющие платформу:', \n            'Как вариант, на корневой элемент можно навесить модификаторы.'\n        ],\n        bonuses: [\n            'Также вы можете использовать предопределенные константы, определяющие платформу:', \n            'Как вариант, на корневой элемент можно навесить модификаторы.'\n        ],\n        wishes: [\n            'Также вы можете использовать предопределенные константы, определяющие платформу:', \n            'Как вариант, на корневой элемент можно навесить модификаторы.'\n        ],\n        expirience: 'от 1 до 3 года'\n    });\n}\n\nclass FindJob extends PureComponent {\n    static propTypes = {\n        id: PropTypes.string,\n        goBack: PropTypes.func.isRequired,\n        back: PropTypes.string.isRequired,\n        goToPanel: PropTypes.func,\n        vacations: PropTypes.arrayOf(PropTypes.shape({\n            name: PropTypes.string,\n            salary: PropTypes.string,\n            organization: PropTypes.shape({\n                id: PropTypes.number, \n                name: PropTypes.string\n            }),\n            city: PropTypes.shape({\n                id: PropTypes.number, \n                name: PropTypes.string\n            }),\n            createdAt: PropTypes.object,\n            description: PropTypes.string,\n            contacts: PropTypes.arrayOf(PropTypes.shape({\n                name: PropTypes.string,\n                numbers: PropTypes.string\n            })),\n            address: PropTypes.string,\n            employmentType: PropTypes.shape({\n                id: PropTypes.number, \n                name: PropTypes.string\n            }),\n            requirments: PropTypes.arrayOf(PropTypes.string),\n            wishes: PropTypes.arrayOf(PropTypes.string),\n            activities: PropTypes.arrayOf(PropTypes.string),\n            bonuses: PropTypes.arrayOf(PropTypes.string),\n            expirience: PropTypes.shape({\n                id: PropTypes.number, \n                name: PropTypes.string\n            }),\n            shedule: PropTypes.shape({\n                id: PropTypes.number, \n                name: PropTypes.string\n            })\n        })),\n        handleCellClick: PropTypes.func\n    }\n\n    state = {\n        search: '',\n        contextOpened: false,\n        isRequestStarted: false,\n        isLoaded: false,\n        listArray: [...fakeList]\n    }\n\n    handleSearchChange = (search) => this.setState({ search });\n\n    handleBackClick = () => {\n        const { goBack, back } = this.props;\n        goBack(back);\n    }\n\n    handleToggleContext = () => {\n        this.setState(prevState => {\n            return {\n                contextOpened: !prevState.contextOpened\n            }\n        });\n    }\n\n    handleGoToExtendedFilters = () => {\n        this.props.goToPanel('extendedfilters')\n    }\n\n    handleListScroll = (data) => {\n        const { clientHeight, scrollHeight, scrollTop } = data;\n        const length = this.state.listArray.length;\n        if(!\n            this.state.isRequestStarted && \n            (scrollHeight < (\n                clientHeight + scrollTop + (scrollHeight * 10 / 100)\n            ))\n        ) {\n            this.setState({isRequestStarted: true});\n            const listArray = [...this.state.listArray];\n            for(let i = length; i < length + 10; i++) {\n                listArray.push({\n                    name: `Официант`,\n                    id: `id: ${i}`,\n                    salary: `${i + 1}0 000 rub.`,\n                    organization: 'Ресторан: The doors bar',\n                    city: 'Saint P.',\n                    createdAt: new Date(),\n                    description: 'Controls the alignment scrolled-to-rows. The default (\"auto\") scrolls the least amount possible to ensure that the specified row is fully visible. Use \"start\" to always align rows to the top of the list and \"end\" to align them bottom. Use \"center\" to align them in the middle of container.',\n                    contacts: [\n                        {\n                            name: 'Alex',\n                            numbers: '89992145123'\n                        }, {\n                            name: 'Elena',\n                            numbers: '89525426672'\n                        }\n                    ],\n                    address: 'address asd',\n                    employmentType: 'full time',\n                    requirments: [\n                        'Также вы можете использовать предопределенные константы, определяющие платформу:', \n                        'Как вариант, на корневой элемент можно навесить модификаторы.'\n                    ],\n                    activities: [\n                        'Также вы можете использовать предопределенные константы, определяющие платформу:', \n                        'Как вариант, на корневой элемент можно навесить модификаторы.'\n                    ],\n                    bonuses: [\n                        'Также вы можете использовать предопределенные константы, определяющие платформу:', \n                        'Как вариант, на корневой элемент можно навесить модификаторы.'\n                    ],\n                    wishes: [\n                        'Также вы можете использовать предопределенные константы, определяющие платформу:', \n                        'Как вариант, на корневой элемент можно навесить модификаторы.'\n                    ],\n                    expirience: 'от 1 до 3 года'\n                });\n            }\n            setTimeout(() => {\n                this.setState({listArray, isRequestStarted: false});\n            }, 2000);\n        }\n    }\n\n    renderHeadButton = (\n        <HeadButton onClick={this.handleBackClick} data-to=\"home\" />\n    )\n\n    renderCell = ({ key, index, style }) => {\n        const el = this.state.listArray[index];\n        const {\n            name,\n            id,\n            salary,\n            organization,\n            city,\n            createdAt,\n            description\n        } = el;\n        return (\n            <div \n                key={key} \n                style={style}\n                className='jobcell'\n                name={index}\n                onClick={() => this.props.handleCellClick(el)}\n            >\n                <div className='jobcell__head'>\n                    <p>\n                        <span className='jobcell__head--name'>{name}</span> \n                        <span className='jobcell__head--salary'>{salary}</span>\n                    </p>\n                </div>\n                <div className='jobcell__subhead'>\n                    <p className='jobcell__subhead--organization'>{organization}</p>\n                    <p className='jobcell__subhead--second'>\n                        <span className='jobcell__subhead--second-city'>{city}</span> \n                        <span className='jobcell__subhead--second-created'>\n                            {formatDate(createdAt)}\n                        </span>\n                    </p>\n                </div>\n                <div className='jobcell__body'>{reduceStringLength(description, 200)}</div>\n            </div>\n        )\n    }\n\n    render() {\n        const { id } = this.props;\n        return (\n            <Panel id={id}>\n                <PanelHeader left={this.renderHeadButton}>\n                    <PanelHeaderContent aside={<Icon16Dropdown />} onClick={this.handleToggleContext}>\n                        Вакансии\n                    </PanelHeaderContent>\n                </PanelHeader>\n                <HeaderContext \n                    opened={this.state.contextOpened} \n                    onClose={this.handleToggleContext}\n                >\n                    <VkList>\n                        <Cell onClick={this.handleGoToExtendedFilters}>\n                            Расширенные фильтры\n                        </Cell>\n                    </VkList>\n                </HeaderContext>\n                <Search value={this.state.search} onChange={this.handleSearchChange} />\n                <AutoSizer>\n                    {({height, width}) => {\n                        return (\n                            <>\n                                <List \n                                    rowCount={this.state.listArray.length}\n                                    height={height - 37}\n                                    width={width}\n                                    rowHeight={150}\n                                    rowRenderer={this.renderCell}\n                                    onScroll={this.handleListScroll}\n                                ></List>\n                            </>\n                        )\n                    }}\n                </AutoSizer>\n                {this.state.isRequestStarted && \n                    <Spinner size=\"regular\" style={{ marginTop: 20 }} />}\n            </Panel>\n        )\n    }\n}\n\nexport default FindJob;\n","import React from 'react';\nimport { \n    HeaderButton, \n    platform, \n    IOS\n } from '@vkontakte/vkui';\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\n\n const osname = platform();\n\nconst HeadButton = (props) => {\n    return (\n        <HeaderButton {...props}>{osname === IOS ? <Icon28ChevronBack/> : <Icon24Back/>}</HeaderButton>\n    )\n}\n\nexport default HeadButton;\n","export const monthNamesShort = [\n    \"Янв\", \"Фев\", \"Март\", \n    \"Апр\", \"Мая\", \"Июнь\", \"Июль\",\n    \"Авг\", \"Сен\", \"Окт\",\n    \"Нов\", \"Дек\"\n  ];","import { monthNamesShort } from './lists';\n\nexport const reduceStringLength = (str = '', numberToReduce = 0) => {\n    return str.length > numberToReduce ? `${str.substring(0, numberToReduce)}...` : str;\n}\n\nexport const formatDate = (date = new Date()) => {\n    const day = date.getDate();\n    const month = monthNamesShort[date.getMonth()];\n    let hours = date.getHours();\n    let minutes = date.getMinutes();\n\n    if(`${hours}`.length === 1) {\n        hours = `0${hours}`;\n    }\n    if(`${minutes}`.length === 1) {\n        minutes = `0${minutes}`;\n    }\n\n    return `${day} ${month}, ${hours}:${minutes}`;\n}\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { \n    Panel, \n    PanelHeader,\n    FormLayout,\n    FormLayoutGroup,\n    Input,\n    Select,\n    Button\n } from '@vkontakte/vkui';\nimport HeadButton from '../../commons/buttons/HeadButton';\n\nimport './ExtendedFilters.css';\n\nclass ExtendedFilters extends PureComponent {\n    static propTypes = {\n        goBack: PropTypes.func,\n        back: PropTypes.string,\n        handleFormSubmit: PropTypes.func.isRequired\n    }\n\n    state = {\n        fields: {\n            category: {\n                type: 'select',\n                top: 'Профобласть',\n                options: [{id: '123', value: '', name: ''}],\n                name: 'category',\n                placeholder: 'Выберите профобласть',\n                value: null\n            },\n            salaryFrom: {\n                type: 'text',\n                placeholder: 'от',\n                name: 'salaryFrom',\n                value: ''\n            },\n            salaryTo: {\n                type: 'text',\n                placeholder: 'до',\n                name: 'salaryTo',\n                value: ''\n            },\n            experience: {\n                type: 'select',\n                top: 'Опыт работы',\n                options: [],\n                name: 'experience',\n                placeholder: 'Выберите количество опыта',\n                value: null\n            },\n            employmentType: {\n                type: 'select',\n                top: 'Тип занятости',\n                options: [],\n                name: 'employmentType',\n                placeholder: 'Выберите тип занятости',\n                value: null\n            },\n            schedules: {\n                type: 'select',\n                top: 'График работы',\n                options: [],\n                name: 'schedules',\n                placeholder: 'Выберите график работы',\n                value: null\n            }\n        }\n    }\n\n    handleBackClick = () => {\n        this.props.goBack();\n    }\n\n    renderButton = (\n        <HeadButton onClick={this.handleBackClick} />\n    );\n\n    handleChange = (e) => {\n        const { name, value } = e.currentTarget;\n        this.setState(prevState => {\n            const field = {...prevState.fields[name], value};\n\n            return {\n                fields: {\n                    ...prevState.fields,\n                    [name]: field\n                }\n            };\n        });\n    }\n\n    handleFormSubmit = () => {\n        this.props.handleFormSubmit(this.state.fields);\n    }\n\n    render() {\n        const {id} = this.props;\n        const { \n            salaryFrom,\n            salaryTo,\n            category,\n            experience,\n            employmentType,\n            schedules\n        } = this.state.fields;\n\n        return (\n            <Panel id={id}>\n                <PanelHeader left={this.renderButton}>Расширенный поиск</PanelHeader>\n                <FormLayout>\n                    <Button \n                        onClick={this.handleFormSubmit} \n                        size='xl'\n                    >Начать поиск</Button>\n                    <Select {...category} onChange={this.handleChange}>\n                        {category.options.map(cat => {\n                            return (\n                                <option key={cat.id} value={cat.value}>{cat.name}</option>\n                            )\n                        })}\n                    </Select>\n                    <FormLayoutGroup top='Заработная плата'>\n                        <Input {...salaryFrom} onChange={this.handleChange} />\n                        <Input {...salaryTo} onChange={this.handleChange} />\n                    </FormLayoutGroup>\n                    <Select {...experience} onChange={this.handleChange} />\n                    <Select {...employmentType} onChange={this.handleChange} />\n                    <Select {...schedules} onChange={this.handleChange} />\n                    <div className='extendedfilters__search'>\n                        <button onClick={this.handleFormSubmit}>Поиск</button>\n                    </div>\n                </FormLayout>\n            </Panel>\n        )\n    }\n}\n\nexport default ExtendedFilters;\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { Panel, PanelHeader } from '@vkontakte/vkui';\nimport HeadButton from '../../commons/buttons/HeadButton';\nimport { formatDate } from '../../../utils';\n\nimport './JobPage.css';\n\nclass JobPage extends PureComponent {\n    static propTypes = {\n        id: PropTypes.string,\n        goToPanel: PropTypes.func,\n        goBack: PropTypes.func.isRequired,\n        back: PropTypes.string.isRequired,\n        entity: PropTypes.shape({\n            name: PropTypes.string,\n            salary: PropTypes.string,\n            organization: PropTypes.shape({\n                id: PropTypes.number, \n                name: PropTypes.string\n            }),\n            city: PropTypes.shape({\n                id: PropTypes.number, \n                name: PropTypes.string\n            }),\n            createdAt: PropTypes.object,\n            description: PropTypes.string,\n            contacts: PropTypes.arrayOf(PropTypes.shape({\n                name: PropTypes.string,\n                numbers: PropTypes.string\n            })),\n            address: PropTypes.string,\n            employmentType: PropTypes.shape({\n                id: PropTypes.number, \n                name: PropTypes.string\n            }),\n            requirments: PropTypes.arrayOf(PropTypes.string),\n            wishes: PropTypes.arrayOf(PropTypes.string),\n            activities: PropTypes.arrayOf(PropTypes.string),\n            bonuses: PropTypes.arrayOf(PropTypes.string),\n            expirience: PropTypes.shape({\n                id: PropTypes.number, \n                name: PropTypes.string\n            }),\n            shedule: PropTypes.shape({\n                id: PropTypes.number, \n                name: PropTypes.string\n            })\n        }).isRequired\n    }\n\n    renderHeadButton = (\n        <HeadButton onClick={this.props.goBack} />\n    );\n\n    render() {\n        const { id, entity } = this.props;\n        const {\n            name,\n            salary,\n            organization,\n            city,\n            createdAt,\n            description,\n            contacts,\n            address,\n            employmentType,\n            requirments,\n            wishes,\n            activities,\n            bonuses,\n            expirience\n        } = entity;\n        return (\n            <Panel id={id}>\n                <PanelHeader left={this.renderHeadButton}>Вакансия</PanelHeader>\n                <div className='jobpage'>\n                    <h3 className='jobpage__name'>{name}</h3>\n                    <p className='jobpage__salary'>{salary}</p>\n                    <p className='jobpage__organization'>{organization}</p>\n                    <p className='jobpage__created'>Создано: {formatDate(createdAt)}</p>\n                    <p className='jobpage__address'>{address}, {city}</p>\n                    <p className='jobpage__expirience'>\n                        <span className='jobpage__expirience-title'>Требуемый опыт работы: </span> \n                        <span className='jobpage__expirience-value'>{expirience}</span>\n                    </p>\n                    <p className='jobpage__employmentType'>\n                        <span className='jobpage__employmentType-title'>Тип занятости: </span> \n                        <span className='jobpage__employmentType-value'>{employmentType}</span>\n                    </p>\n                    <p className='jobpage__description'>{description}</p>\n                    {!!requirments && (\n                        <div className='jobpage__requirments'>\n                            <h4>Требования к кандидату:</h4>\n                            {requirments.map((requirment, index) => {\n                                return (\n                                    <p key={index}>{requirment}</p>\n                                )\n                            })}\n                        </div>\n                    )}\n                    {!!wishes && (\n                        <div className='jobpage__wish'>\n                            <h4>Будет плюсом:</h4>\n                            {activities.map((wish, index) => {\n                                return (\n                                    <p key={index}>{wish}</p>\n                                )\n                            })}\n                        </div>\n                    )}\n                    {!!activities && (\n                        <div className='jobpage__activity'>\n                            <h4>Чем вы будете заниматься:</h4>\n                            {activities.map((activity, index) => {\n                                return (\n                                    <p key={index}>{activity}</p>\n                                )\n                            })}\n                        </div>\n                    )}\n                    {!!bonuses && (\n                        <div className='jobpage__bonuses'>\n                            <h4>Вы получите:</h4>\n                            {bonuses.map((bonuse, index) => {\n                                return (\n                                    <p key={index}>{bonuse}</p>\n                                )\n                            })}\n                        </div>\n                    )}\n                    {!!contacts && (\n                        <div className='jobpage__contacts'>\n                            <h4>Контакты:</h4>\n                            {contacts.map(contact => {\n                                return (\n                                    <p key={contact.id}>\n                                        <span>{contact.name}</span>: <span>{contact.numbers}</span>\n                                    </p>\n                                )\n                            })}\n                        </div>\n                    )}\n                    <div className='jobpage__answer'>\n                        <button>ОТКЛИКНУТЬСЯ</button>\n                    </div>\n                </div>\n            </Panel>\n        )\n    }\n}\n\nexport default JobPage;\n","export const required = (value, errorMsg = 'Необходимо ввести!') => {\n    if(!value) return errorMsg;\n    return null;\n}","import { required } from '../../../utils/validations';\n\nexport const fields = {\n    name: {\n        id: 'name',\n        props: {\n            name: 'name',\n            type: 'text',\n            top: 'Должность',\n            placeholder: 'Кого вы ищите?',\n            bottom: '* обязательно'\n        },\n        errorMsg: 'Должность: необходимо ввести',\n        error: null,\n        validate: [required],\n        required: true\n    }, \n    salaryFrom: {\n        id: 'salaryFrom',\n        props: {\n            name: 'salaryFrom',\n            type: 'text',\n            placeholder: 'от'\n        },\n        error: null,\n        validate: []\n    },\n    salaryTo: {\n        id: 'salaryTo',\n        props: {\n            name: 'salaryTo',\n            type: 'text',\n            placeholder: 'до'\n        },\n        error: null,\n        validate: []\n    },\n    organization: {\n        id: 'organization',\n        props: {\n            name: 'organization',\n            type: 'text',\n            top: 'Наименование организации',\n            placeholder: 'Ваша организация...',\n            bottom: '* обязательно'\n        },\n        error: null,\n        errorMsg: 'Должность: необходимо ввести',\n        validate: [required],\n        required: true\n    },\n    expirience: {\n        id: 'expirience',\n        props: {\n            name: 'expirience',\n            type: 'select',\n            top: 'Опыт работы',\n            placeholder: 'Выберите опыт работы'\n        },\n        lookupKey: '',\n        error: null,\n        validate: []\n    },\n    employmentType: {\n        id: 'employmentType',\n        props: {\n            name: 'employmentType',\n            type: 'select',\n            top: 'Тип занятости',\n            placeholder: 'Выберите тип занятости'\n        },\n        lookupKey: '',\n        error: null,\n        validate: []\n    },\n    requirments: {\n        id: 'requirments',\n        props: {\n            name: 'requirments',\n            type: 'text',\n            top: 'Требования к соискателю',\n            placeholder: 'Введите требование'\n        },\n        error: null,\n        validate: [],\n        isMulti: true\n    },\n    wishes: {\n        id: 'wishes',\n        props: {\n            name: 'wishes',\n            type: 'text',\n            top: 'Будет плюсом',\n            placeholder: 'Введите плюсы'\n        },\n        error: null,\n        validate: [],\n        isMulti: true\n    },\n    activities: {\n        id: 'activities',\n        props: {\n            name: 'activities',\n            type: 'text',\n            top: 'Обязанности в работе',\n            placeholder: 'Чем будет заниматься?'\n        },\n        error: null,\n        validate: [],\n        isMulti: true\n    }, \n    bonuses: {\n        id: 'bonuses',\n        props: {\n            name: 'bonuses',\n            type: 'text',\n            top: 'Что получит соискатель?',\n            placeholder: 'Введите бонусы'\n        },\n        error: null,\n        validate: [],\n        isMulti: true\n    },\n    description: {\n        id: 'description',\n        props: {\n            name: 'description',\n            type: 'text',\n            top: 'Краткое описание',\n            placeholder: 'Это первое, что увидит соискатель при поиске вакансии'\n        },\n        error: null,\n        validate: []\n    },\n    contact_name: {\n        id: 'contact_name',\n        props: {\n            name: 'contact_name',\n            type: 'text',\n            placeholder: 'Имя'\n        },\n        error: null,\n        validate: [],\n        isMulti: true\n    },\n    contact_numbers: {\n        id: 'contact_numbers',\n        props: {\n            name: 'contact_numbers',\n            type: 'text',\n            placeholder: 'Телефон'\n        },\n        error: null,\n        validate: [],\n        isMulti: true\n    },\n    contact_email: {\n        id: 'contact_email',\n        props: {\n            name: 'contact_email',\n            type: 'text',\n            placeholder: 'Email'\n        },\n        error: null,\n        validate: [],\n        isMulti: true\n    },\n    address: {\n        id: 'address',\n        props: {\n            name: 'address',\n            type: 'text',\n            top: 'Ваш адрес',\n            placeholder: 'Введите адрес организации'\n        },\n        error: null,\n        validate: []\n    }\n}","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n    Panel,\n    PanelHeader,\n    FormLayout,\n    FormLayoutGroup,\n    Input,\n    Textarea,\n    Select,\n    Button\n} from '@vkontakte/vkui';\nimport HeadButton from '../../commons/buttons/HeadButton';\nimport { fields } from './fields';\nimport './CreateVacation.css';\n\nconst propTypes = {\n    initialValues: PropTypes.object,\n    goBack: PropTypes.func,\n    handleValuesUpdate: PropTypes.func.isRequired\n}\n\nconst defaultProps = {\n    initialValues: {}\n}\nconst emptyArr = [];\n\nclass CreateVacation extends PureComponent{\n    state = {\n        values: this.props.initialValues,\n        multiValues: {\n            requirments: [0],\n            wishes: [0],\n            activities: [0],\n            bonuses: [0],\n            contacts: [0]\n        },\n        errors: {\n            name: 'Должность: необходимо ввести',\n            organization: 'Должность: необходимо ввести'\n        }\n    }\n\n    handleCreateButtonClick = () => {\n        if(this.props.handleValuesUpdate) this.props.handleValuesUpdate(this.state.values);\n    }\n\n    handleChangeField = (event) => {\n        const { name, value } = event.currentTarget;\n\n        const field = fields[name];\n\n        this.setState(prevState => {\n            const newState = {\n                values: {\n                    ...prevState.values,\n                    [name]: value\n                }\n            };\n\n            if(Array.isArray(field.validate) && field.validate.length) {\n                let error = null;\n                field.validate.some((validateCallback) => {\n                    const errorRes = validateCallback(value, field.errorMsg);\n                    if(errorRes) {\n                        error = errorRes;\n                        return true;\n                    }\n                    return false;\n                });\n\n                newState.errors = {\n                    ...prevState.errors,\n                    [name]: error\n                }\n            }\n\n            return newState;\n        });\n    }\n\n    handleAddButtonClick = (event) => {\n        const { name } = event.target;\n        \n        this.setState(prevState => {\n            return {\n                multiValues: {\n                    ...prevState.multiValues,\n                    [name]: prevState.multiValues[name] && \n                        prevState.multiValues[name].concat(\n                            prevState.multiValues[name].length\n                        )\n                }\n            }\n        })\n    }\n\n    render() {\n        const {\n            name,\n            salaryFrom,\n            salaryTo,\n            organization,\n            expirience,\n            employmentType,\n            requirments,\n            wishes,\n            activities,\n            bonuses,\n            description,\n            contact_name,\n            contact_numbers,\n            contact_email,\n            address\n        } = fields;\n        \n        return (\n            <Panel id={this.props.id}>\n                <PanelHeader left={<HeadButton onClick={this.props.goBack} />}>\n                    Создать вакансию\n                </PanelHeader>\n                <div className='createVacation'>\n                    <FormLayout>\n                        <Input {...name.props} onChange={this.handleChangeField} />\n                        <FormLayoutGroup top=\"Заработная плата\">\n                            <Input {...salaryFrom.props} onChange={this.handleChangeField} />\n                            <Input {...salaryTo.props} onChange={this.handleChangeField} />\n                        </FormLayoutGroup>\n                        <Input {...organization.props} onChange={this.handleChangeField} />\n                        <Select \n                            {...expirience.props} \n                            options={\n                                this.props.lookups && \n                                this.props.lookups[expirience.lookupKey] || \n                                emptyArr\n                            } \n                            onChange={this.handleChangeField} \n                        />\n                        <Select \n                            {...employmentType.props} \n                            options={\n                                this.props.lookups && \n                                this.props.lookups[employmentType.lookupKey] || \n                                emptyArr\n                            } \n                            onChange={this.handleChangeField} \n                        />\n                        <FormLayoutGroup \n                            top='Требования к кандидату' \n                            bottom='Уважите ваши требования к кандидату'\n                        >\n                            {this.state.multiValues.requirments.map(reqId => {\n                                return (\n                                    <Input \n                                        {...requirments.props} \n                                        name={`${requirments.props.name}__${reqId}`} \n                                        onChange={this.handleChangeField}\n                                    />\n                                )\n                            })}\n                            <button \n                                name={requirments.props.name} \n                                className='createVacation__addButton'\n                                onClick={this.handleAddButtonClick}\n                            >+</button>\n                        </FormLayoutGroup>\n                        <FormLayoutGroup \n                            top='Будет плюсом' \n                            bottom='Уважите что будет плюсом вашего кандидата'\n                        >\n                            {this.state.multiValues.wishes.map(wishId => {\n                                return (\n                                    <Input \n                                        {...wishes.props} \n                                        name={`${wishes.props.name}__${wishId}`} \n                                        onChange={this.handleChangeField}\n                                    />\n                                )\n                            })}\n                            <button \n                                name={wishes.props.name} \n                                onClick={this.handleAddButtonClick}\n                                className='createVacation__addButton'\n                            >+</button>\n                        </FormLayoutGroup>\n                        <FormLayoutGroup \n                            top='Чем будет заниматься' \n                            bottom='Уважите ваши чем будет заниматься ваш кандидат'\n                        >\n                            {this.state.multiValues.activities.map(activityId => {\n                                return (\n                                    <Input \n                                        {...activities.props} \n                                        name={`${activities.props.name}__${activityId}`} \n                                        onChange={this.handleChangeField}\n                                    />\n                                )\n                            })}\n                            <button \n                                name={activities.props.name} \n                                onClick={this.handleAddButtonClick}\n                                className='createVacation__addButton'\n                            >+</button>\n                        </FormLayoutGroup>\n                        <FormLayoutGroup \n                            top='Что получит взамен' \n                            bottom='Уважите что получить за работу ваш кандидат'\n                        >\n                            {this.state.multiValues.bonuses.map(activityId => {\n                                return (\n                                    <Input \n                                        {...bonuses.props} \n                                        name={`${bonuses.props.name}__${activityId}`} \n                                        onChange={this.handleChangeField}\n                                    />\n                                )\n                            })}\n                            <button \n                                name={bonuses.props.name} \n                                onClick={this.handleAddButtonClick}\n                                className='createVacation__addButton'\n                            >+</button>\n                        </FormLayoutGroup>\n                        <Textarea \n                            {...description.props} \n                            onChange={this.handleChangeField} \n                        />\n                        <FormLayoutGroup top='Контакты'>\n                            {this.state.multiValues.contacts.map((contactId, index) => {\n                                return (\n                                    <div \n                                        key={contactId}\n                                        className='createVacation__contacts'\n                                    >\n                                        <h3 \n                                            className='createVacation__contacts--head'\n                                        >Контакт {index + 1}</h3>\n                                        <Input \n                                            {...contact_name.props} \n                                            name={`${contact_name.props.name}__${contactId}`} \n                                            onChange={this.handleChangeField}\n                                        />\n                                        <Input \n                                            {...contact_numbers.props} \n                                            name={`${contact_numbers.props.name}__${contactId}`} \n                                            onChange={this.handleChangeField}\n                                        />\n                                        <Input \n                                            {...contact_email.props} \n                                            name={`${contact_email.props.name}__${contactId}`} \n                                            onChange={this.handleChangeField}\n                                        />\n                                    </div>\n                                )\n                            })}\n                            <button \n                                name='contacts' \n                                onClick={this.handleAddButtonClick}\n                                className='createVacation__addButton'\n                            >+</button>\n                        </FormLayoutGroup>\n                        <Input {...address.props} onChange={this.handleChangeField} />\n\n                        <Button \n                            size=\"xl\" \n                            onClick={this.handleCreateButtonClick}\n                            disabled={\n                                !!Object\n                                    .keys(this.state.errors)\n                                    .some(errorKey => this.state.errors[errorKey])\n                            }\n                        >Создать вакансию</Button>\n                    </FormLayout>\n                </div>\n            </Panel>\n        )\n    }\n}\n\nCreateVacation.propTypes = propTypes;\nCreateVacation.defaultProps = defaultProps;\n\nexport default CreateVacation;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { View, Panel, PanelHeader, Button, SelectMimicry, FormLayout } from '@vkontakte/vkui';\nimport vkuiConnect from '@vkontakte/vkui-connect';\nimport './MainFork.css';\n\nimport FindJob from './FindJob';\nimport ExtendedFilters from './ExtendedFilters';\nimport JobPage from './JobPage';\nimport CreateVacation from './CreateVacation';\n\nclass MainFork extends Component {\n  static propTypes = {\n    id: PropTypes.string,\n    selectCity: PropTypes.object.isRequired\n  }\n\n  state = {\n    activePanel: 'mainfork',\n    history: ['mainfork'],\n    selected: null,\n    createJobValues: {}\n  }\n\n  goBack = () => {\n    const history = [...this.state.history];\n    history.pop();\n    const activePanel = history[history.length - 1];\n    if (activePanel === 'mainfork') {\n      vkuiConnect.send('VKWebAppDisableSwipeBack');\n    }\n    this.setState({ history, activePanel });\n  }\n\n  goForward = (activePanel) => {\n    const history = [...this.state.history];\n    history.push(activePanel);\n    if (this.state.activePanel === 'mainfork') {\n      vkuiConnect.send('VKWebAppEnableSwipeBack');\n    }\n    this.setState({ history, activePanel });\n  }\n\n  goToCityView = () => {\n    this.props.goToView('selectcity');\n  }\n\n  goToFindJob = () => {\n    this.goForward('findjob');\n  }\n\n  handleCellClick = (selected) => {\n    this.setState({ selected });\n    this.goForward('jobpage');\n  }\n\n  goToGiveJob = () => this.goForward('createvacation');\n\n  handleExtendedFiltersSubmit = (fields) => {\n    this.goBack();\n    console.log(fields);\n  }\n\n  handleCreateJobValuesChange = values => {\n    this.setState({createJobValues: values});\n  }\n\n  render() {\n    const { id } = this.props;\n    const { activePanel } = this.state;\n\n    return (\n      <View id={id} activePanel={activePanel}>\n        <Panel id='mainfork'>\n          <PanelHeader>Работа</PanelHeader>\n          <div className='mainfork'>\n            <div  className='mainfork-wrapper'>\n              <Button \n                size=\"xl\" \n                onClick={this.goToFindJob} \n                stretched\n              >Ищу работу</Button>\n              <Button \n                size=\"xl\" \n                onClick={this.goToGiveJob} \n                level=\"outline\" \n                stretched\n              >Даю работу</Button>\n              <FormLayout>\n                <SelectMimicry \n                  top='Откуда вы?'\n                  placeholder='Выберите город'\n                  onClick={this.goToCityView}\n                >{this.props.selectedCity.title}</SelectMimicry>\n              </FormLayout>\n            </div>\n          </div>\n        </Panel>\n        <FindJob \n          id='findjob' \n          goBack={this.goBack} \n          goToPanel={this.goForward} \n          handleCellClick={this.handleCellClick} \n        />\n        <ExtendedFilters \n          id='extendedfilters' \n          goBack={this.goBack} \n          handleFormSubmit={this.handleExtendedFiltersSubmit}\n        />\n        <JobPage \n          id='jobpage' \n          goBack={this.goBack} \n          goToPanel={this.goForward} \n          entity={this.state.selected}\n        />\n        <CreateVacation \n          id='createvacation'\n          goBack={this.goBack}\n          handleValuesUpdate={this.handleCreateJobValuesChange}\n          initialValues={this.state.createJobValues}\n        />\n      </View>\n    )\n  }\n}\n\nexport default MainFork;\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { \n  Panel, \n  View, \n  PanelHeader,\n  Search\n } from '@vkontakte/vkui';\nimport HeadButton from '../commons/buttons/HeadButton';\nimport { List, AutoSizer } from 'react-virtualized';\nimport { token } from '../../config';\nimport Icon24Done from '@vkontakte/icons/dist/24/done';\nimport './SelectCity.css';\n\nimport { connect } from 'react-redux';\nimport { citiesListSelector, requestLookupsVkApi } from '../../ducks/lookups';\n\nclass SelectCity extends PureComponent {\n  static propTypes = {\n    id: PropTypes.string.isRequired,\n    goToView: PropTypes.func.isRequired,\n    selectedCity: PropTypes.object\n  }\n\n  state = {\n    activePanel: 'main',\n    searchValue: ''\n  }\n\n  goToMain = () => this.props.goToView('mainfork');\n\n  handleSearchChange = (value) => {\n    this.setState({searchValue: value});\n    if(value.trim()) {\n      this.props.requestLookupsVkApi(\n        'database.getCities',\n        'cities',\n        {\n          'country_id': 1,\n          'need_all': 1,\n          'v': '5.95',\n          'q': value,\n          'access_token': token\n        }\n      );\n    } else if(!value.trim() && value) {} else {\n      this.props.requestLookupsVkApi(\n        'database.getCities',\n        'cities',\n        {\n          'country_id': 1,\n          'need_all': 0,\n          'v': '5.95',\n          'access_token': token\n        }\n      );\n    }\n  }\n\n  renderHeaderButton = (\n    <HeadButton onClick={this.goToMain} />\n  );\n\n  renderCell = ({ key, index, style }) => {\n    const el = this.props.cities[index];\n    const { title, id } = el;\n    return (\n        <div \n            key={key} \n            style={style}\n            className='cityCell'\n            name={index}\n            onClick={() => this.props.handleCitySelected(el)}\n        >{title}{this.props.selectedCity.id === id && (\n          <div className='cityCell__arrow'><Icon24Done /></div>\n        )}</div>\n    )\n  }\n\n  render () {\n    const { id } = this.props;\n\n    return (\n      <View id={id} activePanel={this.state.activePanel}>\n        <Panel id='main'>\n          <PanelHeader left={this.renderHeaderButton}>Выберите город</PanelHeader>\n          <Search value={this.state.searchValue} onChange={this.handleSearchChange} />\n          <AutoSizer>\n            {({height, width}) => {\n              return (\n                <List \n                  rowCount={this.props.cities.length}\n                  height={height - 40}\n                  width={width}\n                  rowHeight={44}\n                  rowRenderer={this.renderCell}\n                />\n              )\n            }}\n          </AutoSizer>\n        </Panel>\n      </View>\n    )\n  }\n}\n\nexport default connect((state) => {\n  return {\n    cities: citiesListSelector(state)\n  }\n}, {\n  requestLookupsVkApi\n})(SelectCity);\n","import React from 'react';\nimport connect from '@vkontakte/vkui-connect';\nimport { connect as reduxConnect } from 'react-redux';\nimport { Root } from '@vkontakte/vkui';\nimport '@vkontakte/vkui/dist/vkui.css';\nimport { token } from './config';\nimport { requestLookupsVkApi, putLookupsVkApiToStore } from './ducks/lookups';\n\nimport MainForm from './components/blocks/MainFork';\nimport SelectCity from './components/blocks/SelectCity';\n\nclass App extends React.Component {\n\tstate = {\n\t\tactiveView: 'mainfork',\n\t\tfetchedUser: null,\n\t\tselectedCity: {\n\t\t\ttitle: 'Город',\n\t\t\tid: 0\n\t\t}\n\t};\n\n\tcomponentDidMount() {\n\t\tconnect.subscribe((e) => {\n\t\t\tswitch (e.detail.type) {\n\t\t\t\tcase 'VKWebAppGetUserInfoResult':\n\t\t\t\t// remove!! later\n\t\t\t\t\tconsole.log(e.detail.data);\n\t\t\t\t\tthis.setState({ \n\t\t\t\t\t\tfetchedUser: e.detail.data, \n\t\t\t\t\t\tselectedCity: e.detail.data.city \n\t\t\t\t\t});\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'VKWebAppCallAPIMethodResult':\n\t\t\t\t\tthis.props\n\t\t\t\t\t\t.putLookupsVkApiToStore(\n\t\t\t\t\t\t\te.detail.data.request_id, \n\t\t\t\t\t\t\te.detail.data.response\n\t\t\t\t\t\t);\n\t\t\t\t\tbreak\n\t\t\t\tdefault:\n\t\t\t\t\tconsole.log(e);\n\t\t\t\t\tconsole.log(e.detail.type);\n\t\t\t}\n\t\t});\n\t\tconnect.send('VKWebAppGetUserInfo', {});\n\t\tthis.props.requestLookupsVkApi(\n\t\t\t'database.getCities',\n\t\t\t'cities',\n\t\t\t{\n\t\t\t\t'country_id': 1,\n\t\t\t\t'need_all': 0,\n\t\t\t\t'v': '5.95',\n\t\t\t\t'access_token': token\n\t\t\t}\n\t\t);\n  }\n\n  handleCitySelected = (selectedCity) => {\n\t  this.setState({selectedCity, activeView: 'mainfork'});\n  }\n\n  goToView = (activeView) => {\n    this.setState({ activeView });\n  }\n\n\trender() {\n\t\treturn (\n\t\t\t<Root activeView={this.state.activeView}>\n\t\t\t\t<MainForm \n\t\t\t\t\tid='mainfork' \n\t\t\t\t\tgoToView={this.goToView} \n\t\t\t\t\tselectedCity={this.state.selectedCity} \n\t\t\t\t/>\n\t\t\t\t<SelectCity \n\t\t\t\t\tid='selectcity' \n\t\t\t\t\tgoToView={this.goToView} \n\t\t\t\t\tselectedCity={this.state.selectedCity}\n\t\t\t\t\thandleCitySelected={this.handleCitySelected}\n\t\t\t\t/>\n\t\t\t</Root>\n\t\t);\n\t}\n}\n\nexport default reduxConnect(state => {\n\tconsole.log(state);\n\treturn {}\n}, {\n\tputLookupsVkApiToStore,\n\trequestLookupsVkApi\n})(App);\n","import React, { Component } from 'react';\nimport {Provider} from 'react-redux';\nimport configureStore from './redux/configureStore';\nimport App from './App';\n\nconst store = configureStore();\n\nclass Root extends Component {\n    render() {\n        return (\n            <Provider store={store}>\n                <App />\n            </Provider>\n        )\n    }\n}\n\nexport default Root;\n","import {applyMiddleware, createStore, compose} from 'redux';\nimport rootReducer from './reducers';\nimport createSagaMiddleware from 'redux-saga';\nimport sagas from '../sagas';\nimport logger from 'redux-logger';\n\nexport default function configureStore() {\n  const sagaMiddleware = createSagaMiddleware();\n  const enhancer = applyMiddleware(sagaMiddleware, logger);\n  const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n  const store = createStore(rootReducer, composeEnhancers(\n    enhancer\n  ));\n\n  sagaMiddleware.run(sagas);\n\n  return store;\n}\n","import 'core-js/es6/map';\nimport 'core-js/es6/set';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport connect from '@vkontakte/vkui-connect';\nimport Root from './Root';\n// import registerServiceWorker from './sw';\n\n// Init VK App\nconnect.send('VKWebAppInit', {});\n\n// Если вы хотите, чтобы ваше веб-приложение работало в оффлайне и загружалось быстрее,\n// расскомментируйте строку с registerServiceWorker();\n// Но не забывайте, что на данный момент у технологии есть достаточно подводных камней\n// Подробнее про сервис воркеры можно почитать тут — https://vk.cc/8MHpmT \n// registerServiceWorker();\n\nReactDOM.render(<Root />, document.getElementById('root'));\n"],"sourceRoot":""}