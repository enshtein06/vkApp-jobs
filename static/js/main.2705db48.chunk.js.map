{"version":3,"sources":["redux/reducers.js","sagas.js","components/blocks/FindJob/index.js","components/commons/buttons/HeadButton.js","utils/lists.js","utils/index.js","components/blocks/ExtendedFilters/index.js","components/blocks/JobPage/index.js","components/blocks/MainFork.js","components/blocks/SelectCity.js","App.js","Root.js","redux/configureStore.js","index.js"],"names":["combineReducers","_callee","regenerator_default","a","wrap","_context","prev","next","all","stop","_marked","osname","platform","HeadButton","props","react_default","createElement","vkui","IOS","chevron_back_default","back_default","monthNamesShort","reduceStringLength","str","arguments","length","undefined","numberToReduce","concat","substring","formatDate","date","Date","day","getDate","month","getMonth","hours","getHours","minutes","getMinutes","fakeList","i","push","name","id","salary","organization","city","createdAt","description","contacts","numbers","address","employmentType","requirments","activities","bonuses","wishes","expirience","FindJob","state","search","contextOpened","isRequestStarted","isLoaded","listArray","handleSearchChange","_this","setState","handleBackClick","_this$props","goBack","back","handleToggleContext","prevState","handleGoToExtendedFilters","goToPanel","handleListScroll","data","clientHeight","scrollHeight","scrollTop","Object","toConsumableArray","setTimeout","renderHeadButton","buttons_HeadButton","onClick","data-to","renderCell","_ref","key","index","style","el","className","handleCellClick","_this2","this","left","aside","dropdown_default","opened","onClose","value","onChange","dist_es","_ref2","height","width","Fragment","rowCount","rowHeight","rowRenderer","onScroll","size","marginTop","PureComponent","ExtendedFilters","fields","category","type","top","options","placeholder","salaryFrom","salaryTo","experience","schedules","renderButton","handleChange","e","_e$currentTarget","currentTarget","field","objectSpread","defineProperty","handleFormSubmit","_this$state$fields","assign","map","cat","JobPage","entity","requirment","wish","activity","bonuse","contact","MainFork","activePanel","history","selected","pop","vkuiConnect","send","goForward","goToCityView","goToView","goToFindJob","console","log","stretched","goToGiveJob","level","blocks_FindJob","blocks_ExtendedFilters","blocks_JobPage","Component","SelectCity","goToMain","renderHeaderButton","App","activeView","fetchedUser","connect","subscribe","detail","components_blocks_MainFork","blocks_SelectCity","React","store","sagaMiddleware","createSagaMiddleware","enhancer","applyMiddleware","logger","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","rootReducer","run","sagas","configureStore","Root","es","src_App","ReactDOM","render","src_Root","document","getElementById"],"mappings":"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","file":"static/js/main.2705db48.chunk.js","sourcesContent":["import { combineReducers } from 'redux';\r\n\r\nexport default combineReducers({})\r\n","import {all} from 'redux-saga/effects';\r\n\r\nexport default function* () {\r\n  yield all([]);\r\n}","import React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { \r\n    Panel, \r\n    PanelHeader, \r\n    Search, \r\n    PanelHeaderContent, \r\n    HeaderContext,\r\n    Cell,\r\n    Spinner,\r\n    List as VkList\r\n} from '@vkontakte/vkui';\r\nimport HeadButton from '../../commons/buttons/HeadButton';\r\nimport Icon16Dropdown from '@vkontakte/icons/dist/16/dropdown';\r\n\r\nimport { reduceStringLength, formatDate } from '../../../utils';\r\nimport './FindJob.css';\r\nimport { List, AutoSizer } from 'react-virtualized';\r\n\r\n\r\nconst fakeList = [];\r\nfor(let i = 0; i < 20; i++) {\r\n    fakeList.push({\r\n        name: `Официант`,\r\n        id: `id: ${i}`,\r\n        salary: `${i + 1}0 000 rub.`,\r\n        organization: 'Ресторан: The doors bar',\r\n        city: 'Saint P.',\r\n        createdAt: new Date(),\r\n        description: 'Controls the alignment scrolled-to-rows. The default (\"auto\") scrolls the least amount possible to ensure that the specified row is fully visible. Use \"start\" to always align rows to the top of the list and \"end\" to align them bottom. Use \"center\" to align them in the middle of container.',\r\n        contacts: [\r\n            {\r\n                name: 'Alex',\r\n                numbers: '89992145123'\r\n            }, {\r\n                name: 'Elena',\r\n                numbers: '89525426672'\r\n            }\r\n        ],\r\n        address: 'address asd',\r\n        employmentType: 'full time',\r\n        requirments: [\r\n            'Также вы можете использовать предопределенные константы, определяющие платформу:', \r\n            'Как вариант, на корневой элемент можно навесить модификаторы.'\r\n        ],\r\n        activities: [\r\n            'Также вы можете использовать предопределенные константы, определяющие платформу:', \r\n            'Как вариант, на корневой элемент можно навесить модификаторы.'\r\n        ],\r\n        bonuses: [\r\n            'Также вы можете использовать предопределенные константы, определяющие платформу:', \r\n            'Как вариант, на корневой элемент можно навесить модификаторы.'\r\n        ],\r\n        wishes: [\r\n            'Также вы можете использовать предопределенные константы, определяющие платформу:', \r\n            'Как вариант, на корневой элемент можно навесить модификаторы.'\r\n        ],\r\n        expirience: 'от 1 до 3 года'\r\n    });\r\n}\r\n\r\nclass FindJob extends PureComponent {\r\n    static propTypes = {\r\n        id: PropTypes.string,\r\n        goBack: PropTypes.func.isRequired,\r\n        back: PropTypes.string.isRequired,\r\n        goToPanel: PropTypes.func,\r\n        vacations: PropTypes.arrayOf(PropTypes.shape({\r\n            name: PropTypes.string,\r\n            salary: PropTypes.string,\r\n            organization: PropTypes.string,\r\n            city: PropTypes.string,\r\n            createdAt: PropTypes.string,\r\n            description: PropTypes.string,\r\n            contacts: PropTypes.arrayOf(PropTypes.shape({\r\n                name: PropTypes.string,\r\n                numbers: PropTypes.string\r\n            })),\r\n            address: PropTypes.string,\r\n            employmentType: PropTypes.string,\r\n            requirments: PropTypes.arrayOf(PropTypes.string),\r\n            activities: PropTypes.arrayOf(PropTypes.string),\r\n            bonuses: PropTypes.arrayOf(PropTypes.string),\r\n            wishes: PropTypes.arrayOf(PropTypes.string)\r\n        })),\r\n        handleCellClick: PropTypes.func\r\n    }\r\n\r\n    state = {\r\n        search: '',\r\n        contextOpened: false,\r\n        isRequestStarted: false,\r\n        isLoaded: false,\r\n        listArray: [...fakeList]\r\n    }\r\n\r\n    handleSearchChange = (search) => this.setState({ search });\r\n\r\n    handleBackClick = () => {\r\n        const { goBack, back } = this.props;\r\n        goBack(back);\r\n    }\r\n\r\n    handleToggleContext = () => {\r\n        this.setState(prevState => {\r\n            return {\r\n                contextOpened: !prevState.contextOpened\r\n            }\r\n        });\r\n    }\r\n\r\n    handleGoToExtendedFilters = () => {\r\n        this.props.goToPanel('extendedfilters')\r\n    }\r\n\r\n    handleListScroll = (data) => {\r\n        const { clientHeight, scrollHeight, scrollTop } = data;\r\n        const length = this.state.listArray.length;\r\n        if(!\r\n            this.state.isRequestStarted && \r\n            (scrollHeight < (\r\n                clientHeight + scrollTop + (scrollHeight * 10 / 100)\r\n            ))\r\n        ) {\r\n            this.setState({isRequestStarted: true});\r\n            const listArray = [...this.state.listArray];\r\n            for(let i = length; i < length + 10; i++) {\r\n                listArray.push({\r\n                    name: `Официант`,\r\n                    id: `id: ${i}`,\r\n                    salary: `${i + 1}0 000 rub.`,\r\n                    organization: 'Ресторан: The doors bar',\r\n                    city: 'Saint P.',\r\n                    createdAt: new Date(),\r\n                    description: 'Controls the alignment scrolled-to-rows. The default (\"auto\") scrolls the least amount possible to ensure that the specified row is fully visible. Use \"start\" to always align rows to the top of the list and \"end\" to align them bottom. Use \"center\" to align them in the middle of container.',\r\n                    contacts: [\r\n                        {\r\n                            name: 'Alex',\r\n                            numbers: '89992145123'\r\n                        }, {\r\n                            name: 'Elena',\r\n                            numbers: '89525426672'\r\n                        }\r\n                    ],\r\n                    address: 'address asd',\r\n                    employmentType: 'full time',\r\n                    requirments: [\r\n                        'Также вы можете использовать предопределенные константы, определяющие платформу:', \r\n                        'Как вариант, на корневой элемент можно навесить модификаторы.'\r\n                    ],\r\n                    activities: [\r\n                        'Также вы можете использовать предопределенные константы, определяющие платформу:', \r\n                        'Как вариант, на корневой элемент можно навесить модификаторы.'\r\n                    ],\r\n                    bonuses: [\r\n                        'Также вы можете использовать предопределенные константы, определяющие платформу:', \r\n                        'Как вариант, на корневой элемент можно навесить модификаторы.'\r\n                    ],\r\n                    wishes: [\r\n                        'Также вы можете использовать предопределенные константы, определяющие платформу:', \r\n                        'Как вариант, на корневой элемент можно навесить модификаторы.'\r\n                    ],\r\n                    expirience: 'от 1 до 3 года'\r\n                });\r\n            }\r\n            setTimeout(() => {\r\n                this.setState({listArray, isRequestStarted: false});\r\n            }, 2000);\r\n        }\r\n    }\r\n\r\n    renderHeadButton = (\r\n        <HeadButton onClick={this.handleBackClick} data-to=\"home\" />\r\n    )\r\n\r\n    renderCell = ({ key, index, style }) => {\r\n        const el = this.state.listArray[index];\r\n        const {\r\n            name,\r\n            id,\r\n            salary,\r\n            organization,\r\n            city,\r\n            createdAt,\r\n            description\r\n        } = el;\r\n        return (\r\n            <div \r\n                key={key} \r\n                style={style}\r\n                className='jobcell'\r\n                name={index}\r\n                onClick={() => this.props.handleCellClick(el)}\r\n            >\r\n                <div className='jobcell__head'>\r\n                    <p>\r\n                        <span className='jobcell__head--name'>{name}</span> \r\n                        <span className='jobcell__head--salary'>{salary}</span>\r\n                    </p>\r\n                </div>\r\n                <div className='jobcell__subhead'>\r\n                    <p className='jobcell__subhead--organization'>{organization}</p>\r\n                    <p className='jobcell__subhead--second'>\r\n                        <span className='jobcell__subhead--second-city'>{city}</span> \r\n                        <span className='jobcell__subhead--second-created'>\r\n                            {formatDate(createdAt)}\r\n                        </span>\r\n                    </p>\r\n                </div>\r\n                <div className='jobcell__body'>{reduceStringLength(description, 200)}</div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        const { id } = this.props;\r\n        return (\r\n            <Panel id={id}>\r\n                <PanelHeader left={this.renderHeadButton}>\r\n                    <PanelHeaderContent aside={<Icon16Dropdown />} onClick={this.handleToggleContext}>\r\n                        Вакансии\r\n                    </PanelHeaderContent>\r\n                </PanelHeader>\r\n                <HeaderContext \r\n                    opened={this.state.contextOpened} \r\n                    onClose={this.handleToggleContext}\r\n                >\r\n                    <VkList>\r\n                        <Cell onClick={this.handleGoToExtendedFilters}>\r\n                            Расширенные фильтры\r\n                        </Cell>\r\n                    </VkList>\r\n                </HeaderContext>\r\n                <Search value={this.state.search} onChange={this.handleSearchChange} />\r\n                <AutoSizer>\r\n                    {({height, width}) => {\r\n                        return (\r\n                            <>\r\n                                <List \r\n                                    rowCount={this.state.listArray.length}\r\n                                    height={height - 37}\r\n                                    width={width}\r\n                                    rowHeight={150}\r\n                                    rowRenderer={this.renderCell}\r\n                                    onScroll={this.handleListScroll}\r\n                                ></List>\r\n                            </>\r\n                        )\r\n                    }}\r\n                </AutoSizer>\r\n                {this.state.isRequestStarted && \r\n                    <Spinner size=\"regular\" style={{ marginTop: 20 }} />}\r\n            </Panel>\r\n        )\r\n    }\r\n}\r\n\r\nexport default FindJob;\r\n","import React from 'react';\r\nimport { \r\n    HeaderButton, \r\n    platform, \r\n    IOS\r\n } from '@vkontakte/vkui';\r\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\r\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\r\n\r\n const osname = platform();\r\n\r\nconst HeadButton = (props) => {\r\n    return (\r\n        <HeaderButton {...props}>{osname === IOS ? <Icon28ChevronBack/> : <Icon24Back/>}</HeaderButton>\r\n    )\r\n}\r\n\r\nexport default HeadButton;\r\n","export const monthNamesShort = [\r\n    \"Янв\", \"Фев\", \"Март\", \r\n    \"Апр\", \"Мая\", \"Июнь\", \"Июль\",\r\n    \"Авг\", \"Сен\", \"Окт\",\r\n    \"Нов\", \"Дек\"\r\n  ];","import { monthNamesShort } from './lists';\r\n\r\nexport const reduceStringLength = (str = '', numberToReduce = 0) => {\r\n    return str.length > numberToReduce ? `${str.substring(0, numberToReduce)}...` : str;\r\n}\r\n\r\nexport const formatDate = (date = new Date()) => {\r\n    const day = date.getDate();\r\n    const month = monthNamesShort[date.getMonth()];\r\n    let hours = date.getHours();\r\n    let minutes = date.getMinutes();\r\n\r\n    if(`${hours}`.length === 1) {\r\n        hours = `0${hours}`;\r\n    }\r\n    if(`${minutes}`.length === 1) {\r\n        minutes = `0${minutes}`;\r\n    }\r\n\r\n    return `${day} ${month}, ${hours}:${minutes}`;\r\n}","import React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { \r\n    Panel, \r\n    PanelHeader,\r\n    FormLayout,\r\n    FormLayoutGroup,\r\n    Input,\r\n    Select\r\n } from '@vkontakte/vkui';\r\nimport HeadButton from '../../commons/buttons/HeadButton';\r\n\r\nimport './ExtendedFilters.css';\r\n\r\nclass ExtendedFilters extends PureComponent {\r\n    static propTypes = {\r\n        goBack: PropTypes.func,\r\n        back: PropTypes.string,\r\n        handleFormSubmit: PropTypes.func.isRequired\r\n    }\r\n\r\n    state = {\r\n        fields: {\r\n            category: {\r\n                type: 'select',\r\n                top: 'Профобласть',\r\n                options: [{id: '123', value: '', name: ''}],\r\n                name: 'category',\r\n                placeholder: 'Выберите профобласть',\r\n                value: null\r\n            },\r\n            salaryFrom: {\r\n                type: 'text',\r\n                placeholder: 'от',\r\n                name: 'salaryFrom',\r\n                value: ''\r\n            },\r\n            salaryTo: {\r\n                type: 'text',\r\n                placeholder: 'до',\r\n                name: 'salaryTo',\r\n                value: ''\r\n            },\r\n            experience: {\r\n                type: 'select',\r\n                top: 'Опыт работы',\r\n                options: [],\r\n                name: 'experience',\r\n                placeholder: 'Выберите количество опыта',\r\n                value: null\r\n            },\r\n            employmentType: {\r\n                type: 'select',\r\n                top: 'Тип занятости',\r\n                options: [],\r\n                name: 'employmentType',\r\n                placeholder: 'Выберите тип занятости',\r\n                value: null\r\n            },\r\n            schedules: {\r\n                type: 'select',\r\n                top: 'График работы',\r\n                options: [],\r\n                name: 'schedules',\r\n                placeholder: 'Выберите график работы',\r\n                value: null\r\n            }\r\n        }\r\n    }\r\n\r\n    handleBackClick = () => {\r\n        this.props.goBack();\r\n    }\r\n\r\n    renderButton = (\r\n        <HeadButton onClick={this.handleBackClick} />\r\n    );\r\n\r\n    handleChange = (e) => {\r\n        const { name, value } = e.currentTarget;\r\n        this.setState(prevState => {\r\n            const field = {...prevState.fields[name], value};\r\n\r\n            return {\r\n                fields: {\r\n                    ...prevState.fields,\r\n                    [name]: field\r\n                }\r\n            };\r\n        });\r\n    }\r\n\r\n    handleFormSubmit = () => {\r\n        this.props.handleFormSubmit(this.state.fields);\r\n    }\r\n\r\n    render() {\r\n        const {id} = this.props;\r\n        const { \r\n            salaryFrom,\r\n            salaryTo,\r\n            category,\r\n            experience,\r\n            employmentType,\r\n            schedules\r\n        } = this.state.fields;\r\n\r\n        return (\r\n            <Panel id={id}>\r\n                <PanelHeader left={this.renderButton}>Расширенный поиск</PanelHeader>\r\n                <FormLayout>\r\n                    <Select {...category} onChange={this.handleChange}>\r\n                        {category.options.map(cat => {\r\n                            return (\r\n                                <option key={cat.id} value={cat.value}>{cat.name}</option>\r\n                            )\r\n                        })}\r\n                    </Select>\r\n                    <FormLayoutGroup top='Заработная плата'>\r\n                        <Input {...salaryFrom} onChange={this.handleChange} />\r\n                        <Input {...salaryTo} onChange={this.handleChange} />\r\n                    </FormLayoutGroup>\r\n                    <Select {...experience} onChange={this.handleChange} />\r\n                    <Select {...employmentType} onChange={this.handleChange} />\r\n                    <Select {...schedules} onChange={this.handleChange} />\r\n                    <div className='extendedfilters__search'>\r\n                        <button onClick={this.handleFormSubmit}>Поиск</button>\r\n                    </div>\r\n                </FormLayout>\r\n            </Panel>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ExtendedFilters;\r\n","import React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Panel, PanelHeader } from '@vkontakte/vkui';\r\nimport HeadButton from '../../commons/buttons/HeadButton';\r\nimport { formatDate } from '../../../utils';\r\n\r\nimport './JobPage.css';\r\n\r\nclass JobPage extends PureComponent {\r\n    static propTypes = {\r\n        id: PropTypes.string,\r\n        goToPanel: PropTypes.func,\r\n        goBack: PropTypes.func.isRequired,\r\n        back: PropTypes.string.isRequired,\r\n        entity: PropTypes.shape({\r\n            name: PropTypes.string,\r\n            salary: PropTypes.string,\r\n            organization: PropTypes.string,\r\n            city: PropTypes.string,\r\n            createdAt: PropTypes.object,\r\n            description: PropTypes.string,\r\n            contacts: PropTypes.arrayOf(PropTypes.shape({\r\n                name: PropTypes.string,\r\n                numbers: PropTypes.string\r\n            })),\r\n            address: PropTypes.string,\r\n            employmentType: PropTypes.string,\r\n            requirments: PropTypes.arrayOf(PropTypes.string),\r\n            wishes: PropTypes.arrayOf(PropTypes.string),\r\n            activities: PropTypes.arrayOf(PropTypes.string),\r\n            bonuses: PropTypes.arrayOf(PropTypes.string),\r\n            expirience: PropTypes.string\r\n        }).isRequired\r\n    }\r\n\r\n    renderHeadButton = (\r\n        <HeadButton onClick={this.props.goBack} />\r\n    );\r\n\r\n    render() {\r\n        const { id, entity } = this.props;\r\n        const {\r\n            name,\r\n            salary,\r\n            organization,\r\n            city,\r\n            createdAt,\r\n            description,\r\n            contacts,\r\n            address,\r\n            employmentType,\r\n            requirments,\r\n            wishes,\r\n            activities,\r\n            bonuses,\r\n            expirience\r\n        } = entity;\r\n        return (\r\n            <Panel id={id}>\r\n                <PanelHeader left={this.renderHeadButton}>Вакансия</PanelHeader>\r\n                <div className='jobpage'>\r\n                    <h3 className='jobpage__name'>{name}</h3>\r\n                    <p className='jobpage__salary'>{salary}</p>\r\n                    <p className='jobpage__organization'>{organization}</p>\r\n                    <p className='jobpage__created'>Создано: {formatDate(createdAt)}</p>\r\n                    <p className='jobpage__address'>{address}, {city}</p>\r\n                    <p className='jobpage__expirience'>\r\n                        <span className='jobpage__expirience-title'>Требуемый опыт работы: </span> \r\n                        <span className='jobpage__expirience-value'>{expirience}</span>\r\n                    </p>\r\n                    <p className='jobpage__employmentType'>\r\n                        <span className='jobpage__employmentType-title'>Тип занятости: </span> \r\n                        <span className='jobpage__employmentType-value'>{employmentType}</span>\r\n                    </p>\r\n                    <p className='jobpage__description'>{description}</p>\r\n                    {!!requirments && (\r\n                        <div className='jobpage__requirments'>\r\n                            <h4>Требования к кандидату:</h4>\r\n                            {requirments.map((requirment, index) => {\r\n                                return (\r\n                                    <p key={index}>{requirment}</p>\r\n                                )\r\n                            })}\r\n                        </div>\r\n                    )}\r\n                    {!!wishes && (\r\n                        <div className='jobpage__wish'>\r\n                            <h4>Будет плюсом:</h4>\r\n                            {activities.map((wish, index) => {\r\n                                return (\r\n                                    <p key={index}>{wish}</p>\r\n                                )\r\n                            })}\r\n                        </div>\r\n                    )}\r\n                    {!!activities && (\r\n                        <div className='jobpage__activity'>\r\n                            <h4>Чем вы будете заниматься:</h4>\r\n                            {activities.map((activity, index) => {\r\n                                return (\r\n                                    <p key={index}>{activity}</p>\r\n                                )\r\n                            })}\r\n                        </div>\r\n                    )}\r\n                    {!!bonuses && (\r\n                        <div className='jobpage__bonuses'>\r\n                            <h4>Вы получите:</h4>\r\n                            {bonuses.map((bonuse, index) => {\r\n                                return (\r\n                                    <p key={index}>{bonuse}</p>\r\n                                )\r\n                            })}\r\n                        </div>\r\n                    )}\r\n                    {!!contacts && (\r\n                        <div className='jobpage__contacts'>\r\n                            <h4>Контакты:</h4>\r\n                            {contacts.map(contact => {\r\n                                return (\r\n                                    <p key={contact.id}>\r\n                                        <span>{contact.name}</span>: <span>{contact.numbers}</span>\r\n                                    </p>\r\n                                )\r\n                            })}\r\n                        </div>\r\n                    )}\r\n                    <div className='jobpage__answer'>\r\n                        <button>ОТКЛИКНУТЬСЯ</button>\r\n                    </div>\r\n                </div>\r\n            </Panel>\r\n        )\r\n    }\r\n}\r\n\r\nexport default JobPage;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { View, Panel, PanelHeader, Button, SelectMimicry, FormLayout } from '@vkontakte/vkui';\r\nimport vkuiConnect from '@vkontakte/vkui-connect';\r\nimport './MainFork.css';\r\n\r\nimport FindJob from './FindJob';\r\nimport ExtendedFilters from './ExtendedFilters';\r\nimport JobPage from './JobPage';\r\n\r\nclass MainFork extends Component {\r\n  static propTypes = {\r\n    id: PropTypes.string\r\n  }\r\n\r\n  state = {\r\n    activePanel: 'mainfork',\r\n    history: ['mainfork'],\r\n    selected: null\r\n  }\r\n\r\n  goBack = () => {\r\n    const history = [...this.state.history];\r\n    history.pop();\r\n    const activePanel = history[history.length - 1];\r\n    if (activePanel === 'mainfork') {\r\n      vkuiConnect.send('VKWebAppDisableSwipeBack');\r\n    }\r\n    this.setState({ history, activePanel });\r\n  }\r\n\r\n  goForward = (activePanel) => {\r\n    const history = [...this.state.history];\r\n    history.push(activePanel);\r\n    if (this.state.activePanel === 'mainfork') {\r\n      vkuiConnect.send('VKWebAppEnableSwipeBack');\r\n    }\r\n    this.setState({ history, activePanel });\r\n  }\r\n\r\n  goToCityView = () => {\r\n    this.props.goToView('selectcity');\r\n  }\r\n\r\n  goToFindJob = () => {\r\n    this.goForward('findjob');\r\n  }\r\n\r\n  handleCellClick = (selected) => {\r\n    this.setState({ selected });\r\n    this.goForward('jobpage');\r\n  }\r\n\r\n  handleFormSubmit = (fields) => {\r\n    this.goBack();\r\n    console.log(fields);\r\n  }\r\n\r\n  render() {\r\n    const { id } = this.props;\r\n    const { activePanel } = this.state;\r\n\r\n    return (\r\n      <View id={id} activePanel={activePanel}>\r\n        <Panel id='mainfork'>\r\n          <PanelHeader>Работа</PanelHeader>\r\n          <div className='mainfork'>\r\n            <div  className='mainfork-wrapper'>\r\n              <Button \r\n                size=\"xl\" \r\n                onClick={this.goToFindJob} \r\n                stretched\r\n              >Ищу работу</Button>\r\n              <Button \r\n                size=\"xl\" \r\n                onClick={this.goToGiveJob} \r\n                level=\"outline\" \r\n                stretched\r\n              >Даю работу</Button>\r\n              <FormLayout>\r\n                <SelectMimicry \r\n                  top='Откуда вы?'\r\n                  placeholder='Выберите город'\r\n                  onClick={this.goToCityView}\r\n                >Санкт-Петербург</SelectMimicry>\r\n              </FormLayout>\r\n            </div>\r\n          </div>\r\n        </Panel>\r\n        <FindJob \r\n          id='findjob' \r\n          goBack={this.goBack} \r\n          goToPanel={this.goForward} \r\n          handleCellClick={this.handleCellClick} \r\n        />\r\n        <ExtendedFilters \r\n          id='extendedfilters' \r\n          goBack={this.goBack} \r\n          handleFormSubmit={this.handleFormSubmit}\r\n        />\r\n        <JobPage \r\n          id='jobpage' \r\n          goBack={this.goBack} \r\n          goToPanel={this.goForward} \r\n          entity={this.state.selected}\r\n        />\r\n      </View>\r\n    )\r\n  }\r\n}\r\n\r\nexport default MainFork;\r\n","import React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { \r\n  Panel, \r\n  View, \r\n  PanelHeader, \r\n  HeaderButton, \r\n  platform, \r\n  IOS, \r\n  Icon24Cancel\r\n } from '@vkontakte/vkui';\r\n\r\nconst osname = platform();\r\n\r\nclass SelectCity extends PureComponent {\r\n  static propTypes = {\r\n    id: PropTypes.string.isRequired,\r\n    goToView: PropTypes.func.isRequired\r\n  }\r\n\r\n  state = {\r\n    activePanel: 'main'\r\n  }\r\n\r\n  goToMain = () => this.props.goToView('mainfork');\r\n\r\n  renderHeaderButton = (\r\n    <HeaderButton \r\n      onClick={this.goToMain}\r\n    >\r\n      {osname === IOS ? 'Назад' : <Icon24Cancel/>}\r\n    </HeaderButton>\r\n  )\r\n\r\n  render () {\r\n    const { id } = this.props;\r\n    return (\r\n      <View id={id} activePanel={this.state.activePanel}>\r\n        <Panel id='main'>\r\n          <PanelHeader left={this.renderHeaderButton}>Выберите город</PanelHeader>\r\n        </Panel>\r\n      </View>\r\n    )\r\n  }\r\n}\r\n\r\nexport default SelectCity;\r\n","import React from 'react';\nimport connect from '@vkontakte/vkui-connect';\nimport { Root } from '@vkontakte/vkui';\nimport '@vkontakte/vkui/dist/vkui.css';\n\nimport MainForm from './components/blocks/MainFork';\nimport SelectCity from './components/blocks/SelectCity';\n\nclass App extends React.Component {\n\tstate = {\n\t\tactiveView: 'mainfork',\n\t\tfetchedUser: null,\n\t};\n\n\tcomponentDidMount() {\n\t\tconnect.subscribe((e) => {\n\t\t\tswitch (e.detail.type) {\n\t\t\t\tcase 'VKWebAppGetUserInfoResult':\n\t\t\t\t\tthis.setState({ fetchedUser: e.detail.data });\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tconsole.log(e.detail.type);\n\t\t\t}\n\t\t});\n\t\tconnect.send('VKWebAppGetUserInfo', {});\n  }\n  \n  goToView = (activeView) => {\n    this.setState({ activeView });\n  }\n\n\trender() {\n\t\treturn (\n\t\t\t<Root activeView={this.state.activeView}>\n        <MainForm id='mainfork' goToView={this.goToView} />\n        <SelectCity id='selectcity' goToView={this.goToView} />\n      </Root>\n\t\t);\n\t}\n}\n\nexport default App;\n","import React, { Component } from 'react';\r\nimport {Provider} from 'react-redux';\r\nimport configureStore from './redux/configureStore';\r\nimport App from './App';\r\n\r\nconst store = configureStore();\r\n\r\nclass Root extends Component {\r\n    render() {\r\n        return (\r\n            <Provider store={store}>\r\n                <App />\r\n            </Provider>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Root;\r\n","import {applyMiddleware, createStore, compose} from 'redux';\r\nimport rootReducer from './reducers';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport sagas from '../sagas';\r\nimport logger from 'redux-logger';\r\n\r\nexport default function configureStore() {\r\n  const sagaMiddleware = createSagaMiddleware();\r\n  const enhancer = applyMiddleware(sagaMiddleware, logger);\r\n  const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n  const store = createStore(rootReducer, composeEnhancers(\r\n    enhancer\r\n  ));\r\n\r\n  sagaMiddleware.run(sagas);\r\n\r\n  return store;\r\n}\r\n","import 'core-js/es6/map';\nimport 'core-js/es6/set';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport connect from '@vkontakte/vkui-connect';\nimport Root from './Root';\n// import registerServiceWorker from './sw';\n\n// Init VK App\nconnect.send('VKWebAppInit', {});\n\n// Если вы хотите, чтобы ваше веб-приложение работало в оффлайне и загружалось быстрее,\n// расскомментируйте строку с registerServiceWorker();\n// Но не забывайте, что на данный момент у технологии есть достаточно подводных камней\n// Подробнее про сервис воркеры можно почитать тут — https://vk.cc/8MHpmT \n// registerServiceWorker();\n\nReactDOM.render(<Root />, document.getElementById('root'));\n"],"sourceRoot":""}